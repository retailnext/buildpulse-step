---
name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  IMAGE: "ghcr.io/${{ github.repository }}"
  PLATFORMS: "linux/amd64,linux/arm64"
  REGISTRY: "ghcr.io"
  TEST_TAG: "ghcr.io/${{ github.repository }}:test"
jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3
      - name: Log in to the Container registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build test image
        uses: docker/build-push-action@f6010ea70151369b06f0194be1051fbbdff851b2 # v6
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
      - name: Validate Container
        id: validate
        run: |
          docker run --rm -i --entrypoint=/usr/local/bin/buildpulse-test-reporter ${{ env.TEST_TAG }} --help 2>&1 \
          | grep 'buildpulse-test-reporter submit TEST_RESULTS_PATH'
          
          version="$(docker image inspect ${{ env.TEST_TAG }} --format='{{ index .Config.Labels "org.opencontainers.image.version" }}')"
          
          echo "tags=${IMAGE}:latest,${IMAGE}:${version}" >> "$GITHUB_OUTPUT"
      - name: Build images
        uses: docker/build-push-action@f6010ea70151369b06f0194be1051fbbdff851b2 # v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.validate.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
